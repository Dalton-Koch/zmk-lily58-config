/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

/ {

    behaviors {
        ht_tp: hold_tap_tap_preferrd {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };


        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(Z)>, <&kp LC(Y)>;
        };
    };

    macros {
        copy: copy {
            label = "COPY";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp C>
                , <&macro_release &kp LCTRL>
                ;
        };
        paste: paste {
            label = "PASTE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// | `/ESC |  1  |  2  |     3     |     4     |  5   |                   |  6   |  7        |  8        |  9   |   0   |    =      |
// |  TAB  |  Q  |  W  |     E     |     R     |  T   |                   |  Y   |  U        |  I        |  O   |   P   |    \      |
// | SHIFT |  A  |  S  |     D     |     F     |  G   |                   |  H   |  J        |  K        |  L   |   ;   |    '      |
// | CTRL  |  Z  |  X  |     C     |     V     |  B   |   "["  |  | "]/~" |  N   |  M        |  ,        |  .   |   /   |    -      |
//                     | paste/ALT | copy/GUI  | LOWER|  SPACE |  | ENTER | BSPC | TO RAISE  | UNDO/REDO |
            bindings = <
&ht_tp ESC GRAVE &kp N1 &kp N2 &kp N3          &kp N4         &kp N5                           &kp N6   &kp N7   &kp N8    &kp N9  &kp N0   &ht_tp DEL EQUAL
&kp TAB          &kp Q  &kp W  &kp E           &kp R          &kp T                            &kp Y    &kp U    &kp I     &kp O   &kp P    &kp MINUS
&kp LSHFT        &kp A  &kp S  &kp D           &kp F          &kp G                            &kp H    &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&kp LCTRL        &kp Z  &kp X  &kp C           &kp V          &kp B  &kp LBKT   &mt TILDE RBKT &kp N    &kp M    &kp COMMA &kp DOT &kp FSLH &kp BSLH
                               &mt LALT LC(V)  &mt LGUI LC(C) &mo 1  &kp SPACE  &kp RET        &kp BSPC &to 2    &td1
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2  |  BT3 |    BT4  |  BT5 |                   |  F6  |  F7   |  F8   |  F9  |  F10  | F11  |
// |       |     |      |      |         |      |                   |  F1  |  F2   |  F3   |  F4  |  F5   | F12  |
// |   `   |  !  |  @   |  #   |    $    |  %   |                   |  ^   |  &    |  *    |  (   |   )   |  ~   |
// |       |EP_ON|EP_OFF|EP_TOG| OUT_BLE |      |        |  |       |      |  _    |  +    |  {   |   }   | "|"  |
//                      |      |         |      |        |  |       |      |       |       |
            bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                    &kp F6    &kp F7    &kp F8          &kp F9    &kp F10   &kp F11
&trans     &trans           &trans            &trans            &trans       &trans                          &kp F1    &kp F2    &kp F3          &kp F4    &kp F5    &kp F12
&kp GRAVE  &kp EXCL         &kp AT            &kp HASH          &kp DOLLAR   &kp PRCNT                       &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp TILDE
&trans     &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &out OUT_BLE       &trans    &trans      &trans    &trans    &kp MINUS &kp KP_PLUS     &kp LBRC  &kp RBRC  &kp PIPE
                                              &trans            &trans       &trans    &trans      &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// | `/ESC |  1  |  2  |     3     |     4    |   5   |                   |  6   |      7     |  8        |  9     |   0   |   =   |
// |  TAB  |  Q  |  W  |     E     |     R    |   T   |                   |  Y   |      U     |  UP       |  O     |   P   |   -   |
// | SHIFT |  A  |  S  |     D     |     F    |   G   |                   |  H   |     LEFT   |  DOWN     |  RIGHT |   ;   |   '   |
// |  CTRL |  Z  |  X  |     C     |     V    |   B   |   "["  |  |  "]"  |  N   |      M     |  ,        |  .     |   /   |   \   |
//                     | paste/ALT | copy/GUI | LOWER |  SPACE |  | ENTER | BSPC | TO DEFAULT | UNDO/REDO |
            bindings = <
&ht_tp ESC GRAVE &kp N1 &kp N2 &kp N3          &kp N4         &kp N5                     &kp N6   &kp N7   &kp N8    &kp N9    &kp N0   &ht_tp DEL EQUAL
&kp TAB          &kp Q  &kp W  &kp E           &kp R          &kp T                      &kp Y    &kp U    &kp UP    &kp O     &kp P    &kp MINUS
&kp LSHFT        &kp A  &kp S  &kp D           &kp F          &kp G                      &kp H    &kp LEFT &kp DOWN  &kp RIGHT &kp SEMI &kp SQT
&kp LCTRL        &kp Z  &kp X  &kp C           &kp V          &kp B  &kp LBKT   &kp RBKT &kp N    &kp M    &kp COMMA &kp DOT   &kp FSLH &kp BSLH
                               &mt LALT LC(V)  &mt LGUI LC(C) &to 0  &kp SPACE  &kp RET  &kp BSPC &to 0    &td1
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    }; 
};
